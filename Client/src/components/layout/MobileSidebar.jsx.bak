import { motion } from 'framer-motion';
import { X } from 'lucide-react';
import Sidebar from './Sidebar';

function MobileSidebar({ isOpen, setIsOpen, view, setView, isParent }) {
  // Variants for the backdrop
  const backdropVariants = {
    closed: { opacity: 0 },
    open: { opacity: 1 }
  };

  // Variants for the sidebar
  const sidebarVariants = {
    closed: { x: '-100%' },
    open: { x: 0 }
  };

  return (
    <motion.div
      initial="closed"
      animate="open"
      exit="closed"
      variants={backdropVariants}
      transition={{ duration: 0.25 }}
      className="fixed inset-0 z-50 bg-background/80 backdrop-blur-sm lg:hidden"
      onClick={() => setIsOpen(false)}
    >
      {/* Stop propagation to prevent closing when clicking inside the sidebar */}
      <motion.div
        variants={sidebarVariants}
        transition={{ duration: 0.3, ease: [0.22, 1, 0.36, 1] }}
        className="fixed left-0 top-0 h-full w-3/4 max-w-xs bg-card shadow-lg z-50 border-r border-border"
        onClick={(e) => e.stopPropagation()}
      >
        <div className="flex justify-between items-center p-4 border-b border-border">
          <h2 className="text-lg font-semibold">PI-Net Menu</h2>
          <button
            className="p-1 rounded-full hover:bg-accent text-muted-foreground hover:text-foreground transition-colors"
            onClick={() => setIsOpen(false)}
            aria-label="Close sidebar"
          >
            <X size={18} />
          </button>
        </div>

        <div className="overflow-y-auto h-[calc(100%-4rem)]">
          <Sidebar view={view} setView={(newView) => {
            setView(newView);
            setIsOpen(false);
          }} isParent={isParent} />
        </div>
      </motion.div>
    </motion.div>
  );
}

export default MobileSidebar;
